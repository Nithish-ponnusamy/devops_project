 Task 5

Install Maven

sudo apt install maven




Fork the repo on github





## Configure Jenkins
 - In Jenkins go to `configure jenkins > tools
 - Locate JDK section
 - Uncheck `Install Automatically
 - Name `Java 17
 - Go to terminal and enter the command and get the java 17 path:

update-java-alternatives --list 

 - paste the java path in `JAVA_HOME`



## Add the pipeline script and build the pipeline


















Pipeline



d



Pipeline code

pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nithi1230/mvn"
        DOCKER_TAG = "latest"
        DOCKER_CREDENTIALS_ID = "docker"
        
        KUBECONFIG = "/var/lib/jenkins/.kube/config"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git url: 'https://github.com/Nithish-ponnusamy/mnv.git', branch: 'main'
            }
        }

        stage('Build Application') {
            steps {
                script {try {
                         sh '${MAVEN_HOME}/bin/mvn clean package -DskipTests'
                    } catch (Exception e) {
                         sh 'mvn test -Dmaven.test.failure.ignore=true'
                        echo "Tests failed, but proceeding..."
                    }
                   
                }
            }
        }

        stage('Run Maven Tests') {
            steps {
                script {
                    try {
                        sh 'mvn test'
                    } catch (Exception e) {
                         sh 'mvn test -Dmaven.test.failure.ignore=true'
                        echo "Tests failed, but proceeding..."
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                sh 'chmod +x build.sh'
                sh './build.sh'
            }
        }
        stage('Login to Docker Hub') {
            steps {
                echo "Logging into Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image to Docker Hub..."
                sh "docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:$DOCKER_TAG"
                sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
            }
        }

        stage('Deploy Docker Container') {
            steps {
                echo "Deploying Docker container..."
                sh 'chmod +x deploy.sh'
                sh './deploy.sh'
            }
        }

        
    }

    post {
        success {
            echo "Deployment Successful!"
        }
        failure {
            echo "Deployment Failed!"
        }
    }
}


Deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mvn-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mvn-app
  template:
    metadata:
      labels:
        app: mvn-app
    spec:
      containers:
        - name: mvn-app
          image: nithi1230/mvn:latest
          ports:
            - containerPort: 8081


service.yaml


apiVersion: v1
kind: Service
metadata:
  name: mvn-app-service
spec:
  selector:
    app: mvn-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
      nodePort: 30002
  type: NodePort





## Verify the console to see the actions 










































output:
















